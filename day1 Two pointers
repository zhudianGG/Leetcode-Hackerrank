27. Remove Element(trick solution not using two pointers)
class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:
        k=len(nums)
        for i in range(len(nums)):
            if nums[i]==val:
               nums[i]=127
               k=k-1
        nums.sort()
        return k
26. Remove Duplicates from Sorted Array
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        fast=1
        slow=1
        size=len(nums)
        while fast<size:
            if nums[fast]!=nums[fast-1]:
                nums[slow]=nums[fast]
                slow+=1
            fast+=1
        nums=sorted(nums)
        return slow
283. Move Zeroes
class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        slow=0
        fast=0
        size = len(nums)
        while fast<size:
            if nums[fast]!=0:
                nums[slow]=nums[fast]
                slow+=1
            fast+=1
        for i in range(slow,size):
            nums[i]=0
            i+=1
        return nums
844. Backspace String Compare
class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
        def get_final_res(A:str):
            A=list(A)
            slow=-1
            fast=0
            size=len(A)
            while fast<size:
                if A[fast]=='#':
                    slow=max(-1,slow-1)
                else:
                    slow+=1
                    A[slow]=A[fast]
                fast+=1
            return ''.join(A[:slow+1])
        return get_final_res(s)==get_final_res(t)
977. Squares of a Sorted Array
class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        slow=0
        fast=len(nums)-1
        result=[]
        
        while(slow<=fast):
            if (nums[slow]*nums[slow])<(nums[fast]*nums[fast]):
                result.append(nums[fast]*nums[fast])
                fast-=1
            else:
                result.append(nums[slow]*nums[slow])
                slow+=1
        return result[::-1]
