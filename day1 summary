二分查找思路总结
前提是数组为有序数组，同时题目还强调数组中无重复元素(有重复考虑左右边界）
区间的定义就是不变量。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是循环不变量规则。
二分法第一种写法
第一种写法，我们定义 target 是在一个在左闭右闭的区间里，也就是[left, right] （这个很重要非常重要）。
区间的定义这就决定了二分法的代码应该如何写，因为定义target在[left, right]区间，所以有如下两点：
while (left <= right) 要使用 <= ，因为left == right是有意义的，所以使用 <=
if (nums[middle] > target) right 要赋值为 middle - 1，因为当前这个nums[middle]一定不是target，那么接下来要查找的左区间结束下标位置就是 middle - 1

35.搜索插入位置(opens new window)
34.在排序数组中查找元素的第一个和最后一个位置(opens new window)
69.x 的平方根
367.有效的完全平方数

双指针思路总结
双指针法（快慢指针法）： 通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。
定义快慢指针
快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组
慢指针：指向更新 新数组下标的位置

有三种情况，可以第一时间反映出来用双指针：
有一个已经排好序（或者顺序固定不能动）的数组（字符串也可以看做是一个有序数组），并且需要操作这个数组中的两个元素来判断是否获取结果。这个时候可以用双指针，一个指头，一个指尾，然后向中间移动。本来用暴力搜索的时间复杂度为 O(N²)，利用数组有序这个条件，使用双指针，可以把时间复杂度降到 O(N)。这种情况的题目有：
26.删除排序数组中的重复项
283.移动零
844.比较含退格的字符串
977.有序数组的平方
